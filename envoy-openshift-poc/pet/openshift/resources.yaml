#########################
##      CONFIGMAP      ##
#########################
apiVersion: v1
kind: ConfigMap
metadata:
  name: pet
data:
  envoy_config.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              tracing:
                operation_name: ingress
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: ingress_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: local_service
        connect_timeout: 0.50s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 8080
      - name: zipkin
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: zipkin
            port_value: 80
    tracing:
      http:
        name: envoy.zipkin
        config:
          collector_cluster: zipkin
          collector_endpoint: "/api/v1/spans"
    admin:
      access_log_path: "/tmp/admin_access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081

---

#########################
##  DEPLOYMENT CONFIG  ##
#########################
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: pet
  name: pet
spec:
  replicas: 1
  selector:
    app: pet
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pet
    spec:
      containers:
      - image: docker.io/jarodriguezparadigma/envoy:1.0
        imagePullPolicy: Always
        name: envoy
        ports:
        - containerPort: 10000
          protocol: TCP
        env:
        - name: ENVOY_CONFIG_PATH
          value: /temp/config/envoy.yaml
        resources: {}
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /temp/config
          name: config
      - image: docker.io/jarodriguezparadigma/pet:1.0
        imagePullPolicy: Always
        name: pet
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      volumes:
      - configMap:
          items:
          - key: envoy_config.yaml
            path: envoy.yaml
          name: pet
        name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange

---

#########################
##       SERVICE       ##
#########################
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pet
  name: pet
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 80-10000
    port: 80
    protocol: TCP
    targetPort: 10000
  selector:
    app: pet
  sessionAffinity: None
  type: LoadBalancer
